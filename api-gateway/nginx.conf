upstream auth_service {
  server auth-service:8080;
}
upstream app_backend {
  server api-server:5000;
}
upstream socket_service {
  server ws-server:4000;
}

server {
  listen 80;
  server_name localhost;

  resolver 127.0.0.11 valid=10s;

  location /auth/ {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass http://auth_service;
  }

location /socket.io/ {
    # Preflight (already in your config)
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        return 204;
    }

    auth_request /validate_internal;
    auth_request_set $auth_user_id_ws $upstream_http_x_user_id;
    proxy_set_header X-User-Id $auth_user_id_ws;

    proxy_set_header Cookie $http_cookie;              # <â€”
    proxy_set_header Origin $http_origin;              # <â€”

    # ðŸ”§ NEW: add CORS headers on ALL responses (GET/POST too)
    add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;  # <â€”
    add_header 'Access-Control-Allow-Credentials' 'true' always;               # <â€”
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; # <â€”
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;     # <â€”

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";   
    proxy_http_version 1.1;

    # ðŸ”§ NEW: recommended for long-lived WS/polling
    proxy_buffering off;                     # <â€”
    proxy_read_timeout 86400s;               # <â€”

    proxy_pass http://socket_service;
}


  location /api/ {
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        return 204;
    }

    auth_request /validate_internal;
    auth_request_set $auth_user_id $upstream_http_x_user_id;
    proxy_set_header X-User-Id $auth_user_id;

    proxy_pass http://app_backend;
  }

  location = /validate_internal {
    internal;
    proxy_method POST;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header Cookie $http_cookie;
    proxy_pass http://auth_service/auth/validate;
  }
}
