services:
  # --- INFRASTRUCTURE ---
  redis:
    image: redis:6
    container_name: redis
    healthcheck: # Added for robustness
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    healthcheck: # ADDED a reliable healthcheck for Kafka
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 40s

  # --- APPLICATION SERVICES ---
  auth-service:
    image: authservice:latest
    container_name: auth-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy # Changed to healthy
    env_file: .env

  api-server:
    image: chat-app-api-server:latest
    container_name: api-server
    env_file: .env

  ws-server:
    image: chat-app-socket-server:latest
    container_name: ws-server
    depends_on:
      kafka:
        condition: service_healthy # UPDATED: Waits for Kafka to be healthy
      redis:
        condition: service_healthy # Changed to healthy
    env_file: .env

  kafka-worker:
    image: chat-app-kafka-worker:latest
    container_name: kafka-worker
    depends_on:
      kafka:
        condition: service_healthy # UPDATED: Waits for Kafka to be healthy
      redis:
        condition: service_healthy # Changed to healthy
    env_file: .env
    restart: unless-stopped

  # --- GATEWAY ---
  api-gateway:
    image: chat-app-api-gateway:latest
    container_name: api-gateway
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - api-server
      - ws-server